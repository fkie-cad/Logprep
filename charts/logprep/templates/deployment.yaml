---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logprep.name" . }}
  labels:
    {{- include "logprep.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "logprep.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "logprep.labels" . | nindent 8 }}
        {{- if .Values.pod_extra_labels -}}
        {{ toYaml .Values.pod_extra_labels | nindent 8 }}
        {{- end }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
    spec:
      securityContext:
        fsGroup: {{ .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      containers:
        - name: logprep
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          {{- if .Values.exporter.enabled}}
          ports:
            - name: exporter
              containerPort: {{ .Values.exporter.port }}
          {{- end}}
          command:
            - logprep
            - run
            {{- range $key, $value := .Values.configurations }}
            - /home/logprep/configurations/{{ $value.name }}
            {{- end }}
            - /home/logprep/configurations/exporter-config.yaml
            - /home/logprep/configurations/logger-config.yaml
          env:
            {{- if eq .Values.logger.level "DEBUG" }}
            - name: DEBUG # to get python stacktrace on error
              value: "1"
            {{- end }}
            {{- if .Values.secrets.credentials }}
            - name: LOGPREP_CREDENTIALS_FILE
              value: "/home/logprep/credentials/{{ .Values.secrets.credentials.name }}"
            {{- end }}
            {{- if .Values.exporter.enabled }}
            - name: PROMETHEUS_MULTIPROC_DIR
              value: /prometheus
            {{- end }}
            {{- if .Values.secrets.certificates }}
            - name: REQUESTS_CA_BUNDLE
              value: /home/logprep/certificates/{{ .Values.secrets.certificates.name }}
            {{- end }}
          volumeMounts:
            - name: logprep-temp
              mountPath: /tmp
            {{- if .Values.exporter.enabled }}
            - name: prometheus-multiproc
              mountPath: /prometheus
            {{- end }}
            - name: {{ .Release.Name }}-{{ .Chart.Name }}-configurations
              mountPath: /home/logprep/configurations
            - name: exporter-config
              mountPath: /home/logprep/configurations/exporter-config.yaml
              subPath: exporter-config.yaml
            - name: logger-config
              mountPath: /home/logprep/configurations/logger-config.yaml
              subPath: logger-config.yaml
            {{- if .Values.secrets.certificates }}
            - name: certificates
              mountPath: /home/logprep/certificates/{{ .Values.secrets.certificates.name }}
            {{- end }}
            {{- if .Values.secrets.credentials }}
            - name: credentials
              mountPath: /home/logprep/credentials/{{ .Values.secrets.credentials.name }}
            {{- end }}
          {{- if .Values.exporter.enabled }}
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8000
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /metrics
              port: 8000
            failureThreshold: 12
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
          {{- end }}
      volumes:
        - name: logprep-temp
          emptyDir:
            medium: "Memory"
        {{- if .Values.exporter.enabled }}
        - name: prometheus-multiproc
          emptyDir:
            medium: "Memory"
        {{- end }}
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-configurations
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-configurations
        - name: exporter-config
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-exporter
        - name: logger-config
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-logger
        {{- if .Values.secrets.certificates }}
        - name: certificates
          secret:
            secretName: {{ .Values.secrets.certificates.name }}
        {{- end }}
        {{- if .Values.secrets.credentials }}
        - name: credentials
          secret:
            secretName: {{ .Values.secrets.credentials.name }}
        {{- end }}
      {{- if .Values.affinity }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  {{- $selectors := include "logprep.selectorLabels" . | fromYaml}}
                  {{- range $key, $value := $selectors }}
                  - key: {{ $key }}
                    operator: In
                    values:
                      - {{ $value }}
                  {{- end }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
