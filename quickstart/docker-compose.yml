version: "3.9"

# The following command must be executed after each restart on linux or elasticsearch exits with an error
# sudo sysctl -w vm.max_map_count=262144

services:
  opensearch:
    image: public.ecr.aws/opensearchproject/opensearch:2
    hostname: opensearch
    container_name: opensearch
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch # Name the node that will run in this container
      - discovery.seed_hosts=opensearch # Nodes to look for when discovering the cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - data:/usr/share/opensearch/data
    network_mode: host

  dashboards:
    image: public.ecr.aws/opensearchproject/opensearch-dashboards:2
    container_name: dashboards
    environment:
      - 'OPENSEARCH_HOSTS=["http://127.0.0.1:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
    depends_on:
      - opensearch
    expose:
      - 5601
    network_mode: host

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    hostname: kafka
    expose:
      - 9092
      - 9093
    network_mode: host
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: sh -c "((sleep 15 && echo 'kafka up' && kafka-topics.sh --create --if-not-exists --bootstrap-server 127.0.0.1:9092 --replication-factor 1 --partitions 3 --topic consumer)&) && /opt/bitnami/scripts/kafka/run.sh"

  logprep:
    build:
      context: ..
    image: logprep
    container_name: logprep
    profiles:
      - logprep
    expose:
      - 8000
    network_mode: host
    depends_on:
      - kafka
      - opensearch
    volumes:
      - ../quickstart/:/home/logprep/quickstart/
    entrypoint:
      - logprep
      - /home/logprep/quickstart/exampledata/config/pipeline.yml

  grafana:
    image: bitnami/grafana:latest
    container_name: grafana
    expose:
      - 3000
    network_mode: host
    volumes:
      - ../quickstart/exampledata/config/grafana/datasources:/opt/bitnami/grafana/conf/provisioning/datasources
      - ../quickstart/exampledata/config/grafana/dashboards:/opt/bitnami/grafana/conf/provisioning/dashboards
  prometheus:
    image: bitnami/prometheus:latest
    container_name: prometheus
    network_mode: host
    expose:
      - 9090
    volumes:
      - ../quickstart/exampledata/config/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml

volumes:
  data:
