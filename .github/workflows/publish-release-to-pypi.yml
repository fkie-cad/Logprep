name: Publish release to PyPi

on:
  release:
    types: [published]

jobs:
  build-wheel-and-tarball:
    runs-on: ubuntu-latest
    name: Build Logprep
    steps:
      - uses: actions/checkout@v4

      - name: Initialize Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.11"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse --archs x86_64

      - name: Build binary wheel and a source tarball
        run: pipx run build --sdist

      - name: copy artifacts to dist folder
        run: cp ./wheelhouse/* ./dist/

      - name: Upload Artifact for next job
        uses: actions/upload-artifact@master
        with:
          name: logprep-build
          path: dist

  publish-latest-release-to-pypi:
    runs-on: ubuntu-latest
    name: Publish release to PyPi
    environment:
      name: pypi
      url: https://pypi.org/p/logprep
    permissions:
      id-token: write
    needs: build-wheel-and-tarball
    steps:
      - name: Download artifact from previous job
        uses: actions/download-artifact@master
        with:
          name: logprep-build
          path: dist

      - name: Publish package distributions to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1

  containerbuild:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    runs-on: ubuntu-latest
    needs: publish-latest-release-to-pypi
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build images
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true # Will only build if this is not here
          build-args: |
            LOGPREP_VERSION=${{ github.ref_name }}
            PYTHON_VERSION=${{ matrix.python-version }}
          tags: |
            ghcr.io/fkie-cad/logprep:py${{ matrix.python-version }}-${{ github.ref_name }}
            ghcr.io/fkie-cad/logprep:py${{ matrix.python-version }}-stable
            ghcr.io/fkie-cad/logprep:py${{ matrix.python-version }}-latest

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.4.1'

      - name: Create SBOM of container image
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/fkie-cad/logprep:py${{ matrix.python-version }}-${{ github.head_ref }}@${{ steps.build-and-push.outputs.digest }}
          artifact-name: py${{ matrix.python-version }}-${{ github.head_ref }}.spdx.json
          output-file: py${{ matrix.python-version }}-${{ github.head_ref }}.spdx.json

      - name: Sign image with a key and add sbom attestation
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ghcr.io/fkie-cad/logprep:py${{ matrix.python-version }}-${{ github.head_ref }}@${DIGEST}
          cosign attest --yes --key env://COSIGN_PRIVATE_KEY --predicate py${{ matrix.python-version }}-${{ github.head_ref }}.spdx.json ghcr.io/fkie-cad/logprep:py${{ matrix.python-version }}-${{ github.head_ref }}@${DIGEST}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      # To avoid the trivy-db becoming outdated, we save the cache for one day
      - name: Get date
        id: date
        run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Restore trivy cache
        uses: actions/cache@v4
        with:
          path: cache/db
          key: trivy-cache-${{ steps.date.outputs.date }}
          restore-keys:
            trivy-cache-

      - name: Scan image using Trivy
        uses: aquasecurity/trivy-action@0.24.0
        env:
          TRIVY_CACHE_DIR: ./cache
        with:
          scan-type: image
          image-ref: ghcr.io/fkie-cad/logprep:py${{ matrix.python-version }}-${{ github.head_ref }}
          trivy-config: trivy.yaml

      # Trivy-db uses `0600` permissions.
      # But `action/cache` use `runner` user by default
      # So we need to change the permissions before caching the database.
      - name: Change permissions for trivy.db
        run: sudo chmod 0644 ./cache/db/trivy.db
