name: Publish latest dev release on Github

on:
  pull_request:
    types: [closed, synchronize]
    branches: [main]

jobs:
  move-latest-release-tag:
    runs-on: ubuntu-latest
    name: Move latest release tag
    # if: github.event.pull_request.merged == true

    steps:
      - uses: actions/checkout@v3

      - name: update latest release tag
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
                await github.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/latest"
                })
            } catch (e) {
              console.log("The latest release tag doesn't exist yet: " + e)
            }
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/latest",
              sha: context.sha
            })

  create-github-release:
    runs-on: ubuntu-latest
    name: Create github release
    # if: github.event.pull_request.merged == true
    needs: move-latest-release-tag

    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/tags/latest

      - name: Initialize Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel

      - name: Build binary wheel and a source tarball
        run: python setup.py sdist bdist_wheel

      - name: debug github.ref
        run: |
          echo The github ref is: "${{ github.ref }}"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.ref == 'refs/tags/latest' }}
        with:
          files: dist/*
          body: |
            This is an automatic release of the latest changes in the main branch. With every every
            merge into to main branch this will be updated. Use this version only for testing.
          fail_on_unmatched_files: true
